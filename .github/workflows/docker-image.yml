name: Build and push docker image to Dockerhub and deploy to kubernetes using helm 

on:
  push:
    branches: [ "main", "develop", "EVT-*" ]
  pull_request:
    branches: [ "main" ]

env:
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKER_REPOSITORY: events-rest-api

jobs:
  docker-build-push:
    runs-on: ubuntu-22.04 
    environment: Development
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest,${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
  #
  # Deploy on a self hosted server
  #
  deploy:
    needs: docker-build-push
    runs-on: self-hosted 
    environment: Development
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Removed kubectl setup step as it's assumed to be pre-installed on the self-hosted runner

    - name: Configure kubectl
      run: |
        echo "${{ env.KUBE_CONFIG_DATA }}" > kubeconfig
        echo "KUBECONFIG=kubeconfig" >> $GITHUB_ENV

    - name: Install Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: 'latest' # default is latest (stable)
      id: install
        
      # Removed Helm setup step as it's assumed to be pre-installed on the self-hosted runner

    - name: Deploy to Kubernetes
      run: |
        git submodule update --init --recursive
        cd helm
        helm upgrade --install api-events ./k8_charts -n dev-ronroyce-tech --set image.tag=${{ github.sha }}
